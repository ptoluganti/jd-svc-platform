apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-service
  labels:
    app: orders-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orders-service
      version: v1
  template:
    metadata:
      labels:
        app: orders-service
        version: v1
    spec:
      containers:
      - name: orders-service
        image: jdsvcplatformdevacr.azurecr.io/orders-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: orders-connection-string
        - name: ConnectionStrings__ServiceBus
          valueFrom:
            secretKeyRef:
              name: servicebus-secrets
              key: connection-string
        - name: KeyVault__VaultUrl
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: keyvault-url
        - name: ApplicationInsights__ConnectionString
          valueFrom:
            secretKeyRef:
              name: monitoring-secrets
              key: appinsights-connection-string
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: orders-service
  labels:
    app: orders-service
spec:
  ports:
  - port: 80
    targetPort: 8080
    name: http
  selector:
    app: orders-service
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: orders-service-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: api.jd-svc-platform-dev.com
    http:
      paths:
      - path: /api/orders
        pathType: Prefix
        backend:
          service:
            name: orders-service
            port:
              number: 80